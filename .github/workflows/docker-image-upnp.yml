name: Docker Image CI upnp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push mr-do-upnp
        uses: docker/build-push-action@v4
        with:
          context: .
          file: 'mr-do-upnp/Dockerfile'
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: riemerk/mr-do-upnp:latest
#      - name: Run the Docker container
#        run: |
#          docker run -d --name dlna-test -p 8200:8200 -p 12345:12345 my-dlna-image
        # Wait for the container to start
#        timeout-minutes: 1
#      - name: Test DLNA service
#        run: |
          # Wait for the server to start
#          sleep 2
          
          # Check if the DLNA server is up and running
#          curl http://localhost:8200 | grep "MiniDLNA status" || exit 1
          
          # Optionally, run additional tests on the TCP stream or other services
          # Example: Check that port 12345 is open (you can customize this for your specific tests)
          # nc -zv localhost 12345 || exit 1